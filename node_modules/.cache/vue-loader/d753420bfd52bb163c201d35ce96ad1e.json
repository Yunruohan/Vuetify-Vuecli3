{"remainingRequest":"/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/dmsun/Desktop/workspace/solar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dmsun/Desktop/workspace/solar/src/pages/welfare/views/Goods.vue?vue&type=template&id=13fa277e&","dependencies":[{"path":"/Users/dmsun/Desktop/workspace/solar/src/pages/welfare/views/Goods.vue","mtime":1547889925000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/cache-loader/dist/cjs.js","mtime":1547890140000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/cache-loader/dist/cjs.js","mtime":1547890140000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"goods\" },\n    [\n      _c(\n        \"v-layout\",\n        {\n          staticStyle: { height: \"64px\" },\n          attrs: { \"align-center\": \"\", \"justify-end\": \"\" }\n        },\n        [\n          _c(\n            \"v-btn\",\n            {\n              attrs: { color: \"primary\", dark: \"\" },\n              on: {\n                click: function($event) {\n                  _vm.addButton()\n                }\n              }\n            },\n            [_vm._v(\"新增商品\")]\n          )\n        ],\n        1\n      ),\n      _c(\n        \"v-data-table\",\n        {\n          staticClass: \"elevation-1\",\n          attrs: {\n            headers: _vm.headers,\n            items: _vm.desserts,\n            loading: _vm.isPending,\n            \"hide-actions\": \"\"\n          },\n          scopedSlots: _vm._u([\n            {\n              key: \"items\",\n              fn: function(props) {\n                return [\n                  _c(\"td\", [_vm._v(_vm._s(props.item.id))]),\n                  _c(\"td\", [_vm._v(_vm._s(props.item.name))]),\n                  _c(\"td\", [\n                    _vm._v(\n                      \"￥\" +\n                        _vm._s(_vm._f(\"formatCurrency\")(props.item.original))\n                    )\n                  ]),\n                  _c(\"td\", [\n                    _vm._v(\n                      \"￥\" +\n                        _vm._s(_vm._f(\"formatCurrency\")(props.item.current))\n                    )\n                  ]),\n                  _c(\"td\", [\n                    _vm._v(\n                      _vm._s(props.item.bought) + \"/\" + _vm._s(props.item.total)\n                    )\n                  ]),\n                  _c(\"td\", [\n                    _vm._v(\n                      _vm._s(props.item.mchnt) +\n                        \" (\" +\n                        _vm._s(props.item.userid) +\n                        \")\"\n                    )\n                  ]),\n                  _c(\"td\", [\n                    _vm._v(_vm._s(_vm._f(\"formatArea\")(props.item.area)))\n                  ]),\n                  _c(\n                    \"td\",\n                    [\n                      _c(\"v-switch\", {\n                        attrs: {\n                          color: \"primary\",\n                          messages:\n                            props.item.status === 1 ? \"已上架\" : \"已下架\",\n                          \"true-value\": 1,\n                          \"false-value\": 0\n                        },\n                        on: {\n                          change: function($event) {\n                            _vm.beforeUpdateStatus($event, props.item.id)\n                          }\n                        },\n                        model: {\n                          value: props.item.status,\n                          callback: function($$v) {\n                            _vm.$set(props.item, \"status\", $$v)\n                          },\n                          expression: \"props.item.status\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"td\",\n                    [\n                      _c(\n                        \"v-btn\",\n                        {\n                          staticClass: \"mx-0\",\n                          attrs: { flat: \"\", icon: \"\", color: \"primary\" },\n                          on: {\n                            click: function($event) {\n                              _vm.viewGoods(props.item)\n                            }\n                          }\n                        },\n                        [\n                          _c(\"v-icon\", { attrs: { small: \"\" } }, [\n                            _vm._v(\"details\")\n                          ])\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ]\n              }\n            }\n          ])\n        },\n        [\n          _c(\"template\", { slot: \"no-data\" }, [\n            _c(\n              \"p\",\n              {\n                staticStyle: { \"text-align\": \"center\", \"padding-top\": \"16px\" }\n              },\n              [_vm._v(\"暂无数据\")]\n            )\n          ])\n        ],\n        2\n      ),\n      _c(\n        \"div\",\n        { staticClass: \"pagination-container\" },\n        [\n          _c(\"span\", { staticClass: \"pagination-total\" }, [\n            _vm._v(\"共 \" + _vm._s(_vm.total) + \" 条\")\n          ]),\n          _c(\"v-select\", {\n            attrs: {\n              items: _vm.selectItems,\n              height: \"20\",\n              label: \"10页/条\",\n              solo: \"\"\n            },\n            on: {\n              change: function($event) {\n                _vm.fetchData()\n              }\n            },\n            model: {\n              value: _vm.pageSize,\n              callback: function($$v) {\n                _vm.pageSize = $$v\n              },\n              expression: \"pageSize\"\n            }\n          }),\n          _c(\"v-pagination\", {\n            attrs: {\n              length: parseInt(_vm.total / _vm.pageSize) + 1,\n              \"total-visible\": 7\n            },\n            on: {\n              input: function($event) {\n                _vm.fetchData()\n              }\n            },\n            model: {\n              value: _vm.page,\n              callback: function($$v) {\n                _vm.page = $$v\n              },\n              expression: \"page\"\n            }\n          })\n        ],\n        1\n      ),\n      _c(\n        \"v-dialog\",\n        {\n          attrs: {\n            fullscreen: \"\",\n            \"hide-overlay\": \"\",\n            transition: \"dialog-bottom-transition\"\n          },\n          model: {\n            value: _vm.isShowDialog,\n            callback: function($$v) {\n              _vm.isShowDialog = $$v\n            },\n            expression: \"isShowDialog\"\n          }\n        },\n        [\n          _c(\n            \"v-toolbar\",\n            { attrs: { card: \"\", dark: \"\", color: \"primary\" } },\n            [\n              _vm.isReadOnly\n                ? _c(\"v-toolbar-title\", [_vm._v(\"商品详情\")])\n                : _c(\"v-toolbar-title\", [\n                    _vm._v(_vm._s(_vm.isUpdate ? \"修改商品\" : \"新增商品\"))\n                  ]),\n              _c(\"v-spacer\"),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { icon: \"\", dark: \"\" },\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.isShowDialog = false\n                    }\n                  }\n                },\n                [_c(\"v-icon\", [_vm._v(\"close\")])],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"v-form\",\n            {\n              ref: \"form\",\n              attrs: { \"lazy-validation\": \"\" },\n              model: {\n                value: _vm.valid,\n                callback: function($$v) {\n                  _vm.valid = $$v\n                },\n                expression: \"valid\"\n              }\n            },\n            [\n              _c(\"v-text-field\", {\n                attrs: {\n                  label: \"名称\",\n                  readonly: _vm.isReadOnly,\n                  rules: _vm.formRulse.nameRules,\n                  counter: \"100\"\n                },\n                model: {\n                  value: _vm.goodsInfo.name,\n                  callback: function($$v) {\n                    _vm.$set(_vm.goodsInfo, \"name\", $$v)\n                  },\n                  expression: \"goodsInfo.name\"\n                }\n              }),\n              _c(\"uploadImage\", {\n                ref: \"uploadimage\",\n                attrs: { label: \"图片\", readonly: _vm.isReadOnly, maxNumber: 9 }\n              }),\n              _c(\n                \"p\",\n                {\n                  staticClass: \"pt-2\",\n                  staticStyle: { color: \"rgba(0,0,0,.54)\" }\n                },\n                [_vm._v(\"* jpg格式，最多9张，不超过200k, 推荐尺寸254*192\")]\n              ),\n              _c(\"v-textarea\", {\n                attrs: {\n                  label: \"描述\",\n                  counter: \"1000\",\n                  readonly: _vm.isReadOnly,\n                  rules: _vm.formRulse.introRules,\n                  \"auto-grow\": \"\"\n                },\n                model: {\n                  value: _vm.goodsInfo.intro,\n                  callback: function($$v) {\n                    _vm.$set(_vm.goodsInfo, \"intro\", $$v)\n                  },\n                  expression: \"goodsInfo.intro\"\n                }\n              }),\n              _c(\"uploadImage\", {\n                ref: \"uploadetail\",\n                attrs: {\n                  label: \"详细图\",\n                  readonly: _vm.isReadOnly,\n                  maxNumber: 9\n                }\n              }),\n              _c(\n                \"p\",\n                {\n                  staticClass: \"pt-2\",\n                  staticStyle: { color: \"rgba(0,0,0,.54)\" }\n                },\n                [\n                  _vm._v(\n                    \"* jpg格式，最多9张，不超过300k, 推荐尺寸宽400~600，高不限\"\n                  )\n                ]\n              ),\n              _c(\"v-text-field\", {\n                ref: \"original\",\n                attrs: {\n                  label: \"原价\",\n                  readonly: _vm.isReadOnly,\n                  rules: _vm.formRulse.originalRules,\n                  \"error-messages\": _vm.currencyErrorMessages\n                },\n                on: {\n                  input: function($event) {\n                    _vm.verifyCurrency()\n                  }\n                },\n                model: {\n                  value: _vm.original_format,\n                  callback: function($$v) {\n                    _vm.original_format = $$v\n                  },\n                  expression: \"original_format\"\n                }\n              }),\n              _c(\"v-text-field\", {\n                ref: \"current\",\n                attrs: {\n                  label: \"现价\",\n                  readonly: _vm.isReadOnly,\n                  rules: _vm.formRulse.currentRules,\n                  \"error-messages\": _vm.currencyErrorMessages\n                },\n                on: {\n                  input: function($event) {\n                    _vm.verifyCurrency()\n                  }\n                },\n                model: {\n                  value: _vm.current_format,\n                  callback: function($$v) {\n                    _vm.current_format = $$v\n                  },\n                  expression: \"current_format\"\n                }\n              }),\n              _c(\"v-text-field\", {\n                attrs: {\n                  label: \"库存\",\n                  readonly: _vm.isReadOnly,\n                  rules: _vm.formRulse.totalRules\n                },\n                model: {\n                  value: _vm.goodsInfo.total,\n                  callback: function($$v) {\n                    _vm.$set(_vm.goodsInfo, \"total\", $$v)\n                  },\n                  expression: \"goodsInfo.total\"\n                }\n              }),\n              _c(\"label\", { staticClass: \"custom-label\" }, [_vm._v(\"有效期\")]),\n              _c(\n                \"v-layout\",\n                { attrs: { \"align-center\": \"\", \"justify-space-between\": \"\" } },\n                [\n                  _c(\n                    \"v-menu\",\n                    {\n                      staticStyle: { width: \"260px\" },\n                      attrs: {\n                        disabled: _vm.isReadOnly,\n                        transition: \"scale-transition\",\n                        \"close-on-content-click\": false\n                      },\n                      model: {\n                        value: _vm.startDatemenu,\n                        callback: function($$v) {\n                          _vm.startDatemenu = $$v\n                        },\n                        expression: \"startDatemenu\"\n                      }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          slot: \"activator\",\n                          \"append-icon\": \"event\",\n                          rules: _vm.formRulse.dateRules,\n                          readonly: \"\",\n                          label: \"开始日期\"\n                        },\n                        slot: \"activator\",\n                        model: {\n                          value: _vm.goodsInfo.start_date,\n                          callback: function($$v) {\n                            _vm.$set(_vm.goodsInfo, \"start_date\", $$v)\n                          },\n                          expression: \"goodsInfo.start_date\"\n                        }\n                      }),\n                      _c(\"v-date-picker\", {\n                        attrs: {\n                          color: \"primary\",\n                          max: _vm.goodsInfo.end_date,\n                          locale: \"zh-Hans\",\n                          \"no-title\": \"\"\n                        },\n                        on: {\n                          input: function($event) {\n                            _vm.startDatemenu = false\n                          }\n                        },\n                        model: {\n                          value: _vm.goodsInfo.start_date,\n                          callback: function($$v) {\n                            _vm.$set(_vm.goodsInfo, \"start_date\", $$v)\n                          },\n                          expression: \"goodsInfo.start_date\"\n                        }\n                      })\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-menu\",\n                    {\n                      staticStyle: { width: \"260px\" },\n                      attrs: {\n                        disabled: _vm.isReadOnly,\n                        transition: \"scale-transition\",\n                        \"close-on-content-click\": false\n                      },\n                      model: {\n                        value: _vm.endDatemenu,\n                        callback: function($$v) {\n                          _vm.endDatemenu = $$v\n                        },\n                        expression: \"endDatemenu\"\n                      }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        attrs: {\n                          slot: \"activator\",\n                          \"append-icon\": \"event\",\n                          rules: _vm.formRulse.dateRules,\n                          readonly: \"\",\n                          label: \"结束日期\"\n                        },\n                        slot: \"activator\",\n                        model: {\n                          value: _vm.goodsInfo.end_date,\n                          callback: function($$v) {\n                            _vm.$set(_vm.goodsInfo, \"end_date\", $$v)\n                          },\n                          expression: \"goodsInfo.end_date\"\n                        }\n                      }),\n                      _c(\"v-date-picker\", {\n                        attrs: {\n                          color: \"primary\",\n                          min: _vm.goodsInfo.start_date,\n                          locale: \"zh-Hans\",\n                          \"no-title\": \"\"\n                        },\n                        on: {\n                          input: function($event) {\n                            _vm.endDatemenu = false\n                          }\n                        },\n                        model: {\n                          value: _vm.goodsInfo.end_date,\n                          callback: function($$v) {\n                            _vm.$set(_vm.goodsInfo, \"end_date\", $$v)\n                          },\n                          expression: \"goodsInfo.end_date\"\n                        }\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"label\", { staticClass: \"custom-label\" }, [\n                _vm._v(\"使用时间段\")\n              ]),\n              _c(\n                \"v-layout\",\n                { attrs: { \"align-center\": \"\", \"justify-space-between\": \"\" } },\n                [\n                  _c(\n                    \"v-menu\",\n                    {\n                      ref: \"startmenu\",\n                      staticStyle: { width: \"260px\" },\n                      attrs: {\n                        disabled: _vm.isReadOnly,\n                        \"close-on-content-click\": false,\n                        transition: \"scale-transition\"\n                      },\n                      model: {\n                        value: _vm.startTimeMenu,\n                        callback: function($$v) {\n                          _vm.startTimeMenu = $$v\n                        },\n                        expression: \"startTimeMenu\"\n                      }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        ref: \"startime\",\n                        attrs: {\n                          slot: \"activator\",\n                          label: \"开始时间\",\n                          \"append-icon\": \"event\",\n                          readonly: \"\"\n                        },\n                        slot: \"activator\",\n                        model: {\n                          value: _vm.goodsInfo.startTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.goodsInfo, \"startTime\", $$v)\n                          },\n                          expression: \"goodsInfo.startTime\"\n                        }\n                      }),\n                      _vm.startTimeMenu\n                        ? _c(\"v-time-picker\", {\n                            attrs: {\n                              max: _vm.goodsInfo.endTime,\n                              format: \"24hr\",\n                              \"no-title\": \"\"\n                            },\n                            on: {\n                              change: function($event) {\n                                _vm.$refs.startmenu.save(\n                                  _vm.goodsInfo.startTime\n                                )\n                              }\n                            },\n                            model: {\n                              value: _vm.goodsInfo.startTime,\n                              callback: function($$v) {\n                                _vm.$set(_vm.goodsInfo, \"startTime\", $$v)\n                              },\n                              expression: \"goodsInfo.startTime\"\n                            }\n                          })\n                        : _vm._e()\n                    ],\n                    1\n                  ),\n                  _c(\n                    \"v-menu\",\n                    {\n                      ref: \"endmenu\",\n                      staticStyle: { width: \"260px\" },\n                      attrs: {\n                        disabled: _vm.isReadOnly,\n                        \"close-on-content-click\": false,\n                        transition: \"scale-transition\"\n                      },\n                      model: {\n                        value: _vm.endTimeMenu,\n                        callback: function($$v) {\n                          _vm.endTimeMenu = $$v\n                        },\n                        expression: \"endTimeMenu\"\n                      }\n                    },\n                    [\n                      _c(\"v-text-field\", {\n                        ref: \"endtime\",\n                        attrs: {\n                          slot: \"activator\",\n                          label: \"结束时间\",\n                          \"append-icon\": \"event\",\n                          readonly: \"\"\n                        },\n                        slot: \"activator\",\n                        model: {\n                          value: _vm.goodsInfo.endTime,\n                          callback: function($$v) {\n                            _vm.$set(_vm.goodsInfo, \"endTime\", $$v)\n                          },\n                          expression: \"goodsInfo.endTime\"\n                        }\n                      }),\n                      _vm.endTimeMenu\n                        ? _c(\"v-time-picker\", {\n                            attrs: {\n                              min: _vm.goodsInfo.startTime,\n                              format: \"24hr\",\n                              \"no-title\": \"\"\n                            },\n                            on: {\n                              change: function($event) {\n                                _vm.$refs.endmenu.save(_vm.goodsInfo.endTime)\n                              }\n                            },\n                            model: {\n                              value: _vm.goodsInfo.endTime,\n                              callback: function($$v) {\n                                _vm.$set(_vm.goodsInfo, \"endTime\", $$v)\n                              },\n                              expression: \"goodsInfo.endTime\"\n                            }\n                          })\n                        : _vm._e()\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"v-textarea\", {\n                attrs: {\n                  label: \"注意事项\",\n                  readonly: _vm.isReadOnly,\n                  counter: \"400\",\n                  rules: _vm.formRulse.noticeRules,\n                  \"auto-grow\": \"\"\n                },\n                model: {\n                  value: _vm.goodsInfo.notice,\n                  callback: function($$v) {\n                    _vm.$set(_vm.goodsInfo, \"notice\", $$v)\n                  },\n                  expression: \"goodsInfo.notice\"\n                }\n              }),\n              _c(\"v-text-field\", {\n                attrs: {\n                  label: \"商品来源\",\n                  readonly: _vm.isReadOnly,\n                  counter: _vm.goodsInfo.src ? 10 : undefined,\n                  rules: _vm.formRulse.srcRules\n                },\n                model: {\n                  value: _vm.goodsInfo.src,\n                  callback: function($$v) {\n                    _vm.$set(_vm.goodsInfo, \"src\", $$v)\n                  },\n                  expression: \"goodsInfo.src\"\n                }\n              }),\n              _c(\"v-text-field\", {\n                attrs: {\n                  label: \"关联商户id\",\n                  readonly: _vm.isReadOnly,\n                  rules: _vm.formRulse.useridRules,\n                  \"error-messages\": _vm.useridErrorMessages\n                },\n                on: {\n                  blur: function($event) {\n                    _vm.fetchStores($event.target.value, true)\n                  }\n                },\n                model: {\n                  value: _vm.goodsInfo.userid,\n                  callback: function($$v) {\n                    _vm.$set(_vm.goodsInfo, \"userid\", $$v)\n                  },\n                  expression: \"goodsInfo.userid\"\n                }\n              }),\n              _c(\"v-select\", {\n                attrs: {\n                  label: \"兑换门店\",\n                  items: _vm.stores,\n                  \"item-text\": \"name\",\n                  \"item-value\": \"id\",\n                  rules: _vm.formRulse.storesRules,\n                  multiple: \"\",\n                  \"return-object\": \"\",\n                  chips: \"\"\n                },\n                model: {\n                  value: _vm.goodsInfo.exchange,\n                  callback: function($$v) {\n                    _vm.$set(_vm.goodsInfo, \"exchange\", $$v)\n                  },\n                  expression: \"goodsInfo.exchange\"\n                }\n              }),\n              _vm.isReadOnly\n                ? _c(\n                    \"div\",\n                    { staticStyle: { \"text-align\": \"right\" } },\n                    [\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { color: \"primary\" },\n                          on: {\n                            click: function($event) {\n                              _vm.isReadOnly = false\n                            }\n                          }\n                        },\n                        [_vm._v(\"编辑\")]\n                      )\n                    ],\n                    1\n                  )\n                : _c(\n                    \"div\",\n                    { staticStyle: { \"text-align\": \"right\" } },\n                    [\n                      _c(\n                        \"v-btn\",\n                        {\n                          attrs: { disabled: !_vm.valid, color: \"primary\" },\n                          on: {\n                            click: function($event) {\n                              _vm.submit()\n                            }\n                          }\n                        },\n                        [_vm._v(\"保存\")]\n                      ),\n                      _c(\n                        \"v-btn\",\n                        {\n                          on: {\n                            click: function($event) {\n                              _vm.reset()\n                            }\n                          }\n                        },\n                        [_vm._v(\"重置\")]\n                      )\n                    ],\n                    1\n                  )\n            ],\n            1\n          )\n        ],\n        1\n      ),\n      _c(\"comfirm\", {\n        attrs: {\n          isVisiable: _vm.showComfirm,\n          msg:\n            _vm.currentItem.status === 1\n              ? \"确定下架该商品吗？\"\n              : \"确定上架该商品吗？\"\n        },\n        on: {\n          okHandler: function($event) {\n            _vm.updateStatus()\n          },\n          cancelHandler: function($event) {\n            _vm.cancelUpdateStatus()\n          }\n        }\n      })\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}