{"remainingRequest":"/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/dmsun/Desktop/workspace/solar/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/dmsun/Desktop/workspace/solar/src/pages/welfare/views/common/CouponAdd.vue?vue&type=template&id=031edbbf&scoped=true&","dependencies":[{"path":"/Users/dmsun/Desktop/workspace/solar/src/pages/welfare/views/common/CouponAdd.vue","mtime":1547889925000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/cache-loader/dist/cjs.js","mtime":1547890140000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/cache-loader/dist/cjs.js","mtime":1547890140000},{"path":"/Users/dmsun/Desktop/workspace/solar/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"v-layout\",\n    { attrs: { row: \"\", \"justify-end\": \"\" } },\n    [\n      _c(\n        \"v-dialog\",\n        {\n          attrs: {\n            fullscreen: \"\",\n            \"hide-overlay\": \"\",\n            transition: \"dialog-bottom-transition\"\n          },\n          model: {\n            value: _vm.dialog,\n            callback: function($$v) {\n              _vm.dialog = $$v\n            },\n            expression: \"dialog\"\n          }\n        },\n        [\n          _vm.item\n            ? _c(\n                \"v-btn\",\n                {\n                  attrs: { slot: \"activator\", color: \"primary\" },\n                  slot: \"activator\"\n                },\n                [_vm._v(\"\\n      编辑\\n    \")]\n              )\n            : _c(\n                \"v-btn\",\n                {\n                  attrs: { slot: \"activator\", color: \"primary\", dark: \"\" },\n                  slot: \"activator\"\n                },\n                [_vm._v(\"新增优惠券\")]\n              ),\n          _c(\n            \"v-toolbar\",\n            {\n              staticClass: \"cus-toolbar\",\n              attrs: { dark: \"\", color: \"primary\" }\n            },\n            [\n              _vm.item\n                ? _c(\n                    \"v-toolbar-title\",\n                    { attrs: { \"align-self-center\": \"\" } },\n                    [_vm._v(\"编辑优惠券\")]\n                  )\n                : _c(\n                    \"v-toolbar-title\",\n                    { attrs: { \"align-self-center\": \"\" } },\n                    [_vm._v(\"新增优惠券\")]\n                  ),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { icon: \"\", dark: \"\" },\n                  nativeOn: {\n                    click: function($event) {\n                      _vm.dialog = false\n                    }\n                  }\n                },\n                [_c(\"v-icon\", [_vm._v(\"close\")])],\n                1\n              )\n            ],\n            1\n          ),\n          _c(\n            \"v-form\",\n            {\n              ref: \"form\",\n              staticClass: \"banner-form\",\n              attrs: { \"lazy-validation\": \"\" },\n              model: {\n                value: _vm.valid,\n                callback: function($$v) {\n                  _vm.valid = $$v\n                },\n                expression: \"valid\"\n              }\n            },\n            [\n              _c(\"v-text-field\", {\n                attrs: {\n                  rules: _vm.nameRules,\n                  counter: 40,\n                  label: \"名称\",\n                  required: \"\"\n                },\n                model: {\n                  value: _vm.name,\n                  callback: function($$v) {\n                    _vm.name = $$v\n                  },\n                  expression: \"name\"\n                }\n              }),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", \"align-end\": \"\" } },\n                [\n                  _c(\"uploadImage\", {\n                    ref: \"uploadimage1\",\n                    staticClass: \"mr-2\",\n                    attrs: { maxNumber: 1, label: \"首页图片\" }\n                  }),\n                  _c(\"p\", { staticClass: \"ma-0 pa-0 line-h-50\" }, [\n                    _c(\"span\", [_vm._v(\"* \")]),\n                    _vm._v(\"jpg格式，1张，不超过200k，推荐尺寸\")\n                  ])\n                ],\n                1\n              ),\n              _c(\"v-text-field\", {\n                attrs: {\n                  rules: _vm.termRules,\n                  counter: 40,\n                  label: \"使用条件\",\n                  required: \"\"\n                },\n                model: {\n                  value: _vm.term,\n                  callback: function($$v) {\n                    _vm.term = $$v\n                  },\n                  expression: \"term\"\n                }\n              }),\n              _c(\"v-textarea\", {\n                attrs: { rules: _vm.introRules, label: \"描述\", counter: \"400\" },\n                model: {\n                  value: _vm.intro,\n                  callback: function($$v) {\n                    _vm.intro = $$v\n                  },\n                  expression: \"intro\"\n                }\n              }),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", \"align-end\": \"\" } },\n                [\n                  _c(\"uploadImage\", {\n                    ref: \"uploadimage2\",\n                    staticClass: \"mr-2\",\n                    attrs: { maxNumber: 1, label: \"详情图片\" }\n                  }),\n                  _c(\"p\", { staticClass: \"ma-0 pa-0 line-h-50\" }, [\n                    _c(\"span\", [_vm._v(\"* \")]),\n                    _vm._v(\"jpg格式，1张，不超过200k，推荐尺寸\")\n                  ])\n                ],\n                1\n              ),\n              _c(\"v-text-field\", {\n                attrs: { rules: _vm.totalRules, label: \"库存\", required: \"\" },\n                model: {\n                  value: _vm.total,\n                  callback: function($$v) {\n                    _vm.total = $$v\n                  },\n                  expression: \"total\"\n                }\n              }),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", \"flex-end\": \"\" } },\n                [\n                  _c(\n                    \"v-layout\",\n                    {\n                      staticClass: \"v-btn-cus\",\n                      attrs: { row: \"\", wrap: \"\", \"justify-space-between\": \"\" }\n                    },\n                    [\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs11: \"\", sm5: \"\" } },\n                        [\n                          _c(\n                            \"v-menu\",\n                            {\n                              ref: \"menu1\",\n                              attrs: {\n                                \"close-on-content-click\": false,\n                                \"nudge-right\": 40,\n                                lazy: \"\",\n                                transition: \"scale-transition\",\n                                \"offset-y\": \"\",\n                                \"full-width\": \"\",\n                                \"max-width\": \"290px\",\n                                \"min-width\": \"290px\"\n                              },\n                              model: {\n                                value: _vm.menu1,\n                                callback: function($$v) {\n                                  _vm.menu1 = $$v\n                                },\n                                expression: \"menu1\"\n                              }\n                            },\n                            [\n                              _c(\"v-text-field\", {\n                                attrs: {\n                                  slot: \"activator\",\n                                  label: \"开始日期\",\n                                  \"persistent-hint\": \"\",\n                                  \"prepend-icon\": \"event\"\n                                },\n                                on: {\n                                  blur: function($event) {\n                                    _vm.date1 = _vm.parseDate(_vm.dateFormatted)\n                                  }\n                                },\n                                slot: \"activator\",\n                                model: {\n                                  value: _vm.dateFormatted,\n                                  callback: function($$v) {\n                                    _vm.dateFormatted = $$v\n                                  },\n                                  expression: \"dateFormatted\"\n                                }\n                              }),\n                              _c(\"v-date-picker\", {\n                                attrs: { max: _vm.date2, \"no-title\": \"\" },\n                                on: {\n                                  input: function($event) {\n                                    _vm.menu1 = false\n                                  }\n                                },\n                                model: {\n                                  value: _vm.date1,\n                                  callback: function($$v) {\n                                    _vm.date1 = $$v\n                                  },\n                                  expression: \"date1\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs11: \"\", sm5: \"\" } },\n                        [\n                          _c(\n                            \"v-menu\",\n                            {\n                              attrs: {\n                                \"close-on-content-click\": false,\n                                \"nudge-right\": 40,\n                                lazy: \"\",\n                                transition: \"scale-transition\",\n                                \"offset-y\": \"\",\n                                \"full-width\": \"\",\n                                \"max-width\": \"290px\",\n                                \"min-width\": \"290px\"\n                              },\n                              model: {\n                                value: _vm.menu2,\n                                callback: function($$v) {\n                                  _vm.menu2 = $$v\n                                },\n                                expression: \"menu2\"\n                              }\n                            },\n                            [\n                              _c(\"v-text-field\", {\n                                attrs: {\n                                  slot: \"activator\",\n                                  label: \"结束日期\",\n                                  \"persistent-hint\": \"\",\n                                  \"prepend-icon\": \"event\"\n                                },\n                                on: {\n                                  blur: function($event) {\n                                    _vm.date2 = _vm.parseDate(\n                                      _vm.computedDateFormatted\n                                    )\n                                  }\n                                },\n                                slot: \"activator\",\n                                model: {\n                                  value: _vm.computedDateFormatted,\n                                  callback: function($$v) {\n                                    _vm.computedDateFormatted = $$v\n                                  },\n                                  expression: \"computedDateFormatted\"\n                                }\n                              }),\n                              _c(\"v-date-picker\", {\n                                attrs: { min: _vm.date1, \"no-title\": \"\" },\n                                on: {\n                                  input: function($event) {\n                                    _vm.menu2 = false\n                                  }\n                                },\n                                model: {\n                                  value: _vm.date2,\n                                  callback: function($$v) {\n                                    _vm.date2 = $$v\n                                  },\n                                  expression: \"date2\"\n                                }\n                              })\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", \"flex-end\": \"\" } },\n                [\n                  _c(\n                    \"v-layout\",\n                    {\n                      staticClass: \"v-btn-cus\",\n                      attrs: { row: \"\", wrap: \"\", \"justify-space-between\": \"\" }\n                    },\n                    [\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs11: \"\", sm5: \"\" } },\n                        [\n                          _c(\n                            \"v-menu\",\n                            {\n                              ref: \"menu3\",\n                              attrs: {\n                                \"close-on-content-click\": false,\n                                \"nudge-right\": 40,\n                                \"return-value\": _vm.time1,\n                                lazy: \"\",\n                                transition: \"scale-transition\",\n                                \"offset-y\": \"\",\n                                \"full-width\": \"\",\n                                \"min-width\": \"290px\"\n                              },\n                              on: {\n                                \"update:returnValue\": function($event) {\n                                  _vm.time1 = $event\n                                }\n                              },\n                              model: {\n                                value: _vm.menu3,\n                                callback: function($$v) {\n                                  _vm.menu3 = $$v\n                                },\n                                expression: \"menu3\"\n                              }\n                            },\n                            [\n                              _c(\"v-text-field\", {\n                                attrs: {\n                                  slot: \"activator\",\n                                  label: \"开始时间\",\n                                  \"prepend-icon\": \"access_time\",\n                                  readonly: \"\"\n                                },\n                                slot: \"activator\",\n                                model: {\n                                  value: _vm.time1,\n                                  callback: function($$v) {\n                                    _vm.time1 = $$v\n                                  },\n                                  expression: \"time1\"\n                                }\n                              }),\n                              _vm.menu3\n                                ? _c(\"v-time-picker\", {\n                                    attrs: {\n                                      format: \"24hr\",\n                                      \"full-width\": \"\",\n                                      max: _vm.time2\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        _vm.$refs.menu3.save(_vm.time1)\n                                      }\n                                    },\n                                    model: {\n                                      value: _vm.time1,\n                                      callback: function($$v) {\n                                        _vm.time1 = $$v\n                                      },\n                                      expression: \"time1\"\n                                    }\n                                  })\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      ),\n                      _c(\n                        \"v-flex\",\n                        { attrs: { xs11: \"\", sm5: \"\" } },\n                        [\n                          _c(\n                            \"v-menu\",\n                            {\n                              ref: \"menu4\",\n                              attrs: {\n                                \"close-on-content-click\": false,\n                                \"nudge-right\": 40,\n                                \"return-value\": _vm.time2,\n                                lazy: \"\",\n                                transition: \"scale-transition\",\n                                \"offset-y\": \"\",\n                                \"full-width\": \"\",\n                                \"min-width\": \"290px\"\n                              },\n                              on: {\n                                \"update:returnValue\": function($event) {\n                                  _vm.time2 = $event\n                                }\n                              },\n                              model: {\n                                value: _vm.menu4,\n                                callback: function($$v) {\n                                  _vm.menu4 = $$v\n                                },\n                                expression: \"menu4\"\n                              }\n                            },\n                            [\n                              _c(\"v-text-field\", {\n                                attrs: {\n                                  slot: \"activator\",\n                                  label: \"结束时间\",\n                                  \"prepend-icon\": \"access_time\",\n                                  readonly: \"\"\n                                },\n                                slot: \"activator\",\n                                model: {\n                                  value: _vm.time2,\n                                  callback: function($$v) {\n                                    _vm.time2 = $$v\n                                  },\n                                  expression: \"time2\"\n                                }\n                              }),\n                              _vm.menu4\n                                ? _c(\"v-time-picker\", {\n                                    attrs: {\n                                      format: \"24hr\",\n                                      \"full-width\": \"\",\n                                      min: _vm.time1\n                                    },\n                                    on: {\n                                      change: function($event) {\n                                        _vm.$refs.menu4.save(_vm.time2)\n                                      }\n                                    },\n                                    model: {\n                                      value: _vm.time2,\n                                      callback: function($$v) {\n                                        _vm.time2 = $$v\n                                      },\n                                      expression: \"time2\"\n                                    }\n                                  })\n                                : _vm._e()\n                            ],\n                            1\n                          )\n                        ],\n                        1\n                      )\n                    ],\n                    1\n                  )\n                ],\n                1\n              ),\n              _c(\"v-text-field\", {\n                attrs: {\n                  rules: _vm.useridRules,\n                  label: \"关联商户id\",\n                  required: \"\"\n                },\n                on: {\n                  blur: function($event) {\n                    _vm.useridInput()()\n                  },\n                  change: _vm.modelClean\n                },\n                model: {\n                  value: _vm.userid,\n                  callback: function($$v) {\n                    _vm.userid = $$v\n                  },\n                  expression: \"userid\"\n                }\n              }),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", \"align-end\": \"\" } },\n                [\n                  _c(\"v-select\", {\n                    attrs: {\n                      items: _vm.exchange,\n                      \"item-text\": \"name\",\n                      \"item-value\": \"id\",\n                      chips: \"\",\n                      \"no-data-text\": \"暂无数据\",\n                      placeholder: \"请选择门店\",\n                      label: \"选择门店\",\n                      \"return-object\": \"\",\n                      multiple: \"\"\n                    },\n                    model: {\n                      value: _vm.model,\n                      callback: function($$v) {\n                        _vm.model = $$v\n                      },\n                      expression: \"model\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-layout\",\n                { attrs: { row: \"\", wrap: \"\" } },\n                _vm._l(_vm.model, function(_item, _index) {\n                  return _c(\"v-flex\", { key: _index }, [\n                    _c(\n                      \"div\",\n                      { staticClass: \"chip-like-div\" },\n                      [\n                        _c(\"span\", [_vm._v(_vm._s(_item.name))]),\n                        _c(\n                          \"v-icon\",\n                          {\n                            staticClass: \"chip-like-icon\",\n                            attrs: { color: \"white\", small: \"\" },\n                            on: {\n                              click: function($event) {\n                                _vm.chipCtrl(_item)\n                              }\n                            }\n                          },\n                          [_vm._v(\"close\")]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                })\n              ),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: {\n                    disabled: !_vm.valid,\n                    color: \"primary\",\n                    loading: _vm.submitLoading\n                  },\n                  on: { click: _vm.submit }\n                },\n                [_vm._v(\"\\n        保存\\n      \")]\n              ),\n              _c(\"v-btn\", { on: { click: _vm.cancel } }, [_vm._v(\"取消\")])\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}